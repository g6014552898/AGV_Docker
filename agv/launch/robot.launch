<?xml version="1.0"?>
<launch>
    <!-- Start ROS communication between the robot's computer and Linorobot base -->
    <node pkg="rosserial_python" name="rosserial_lino" type="serial_node.py" output="screen" required="true">
        <param name="port" value="/dev/ttyACM0" />
        <param name="baud" value="57600" />
    </node>

    <!-- IMU relay from linorobot_msgs/Imu to sensor_msgs/Imu -->
    <node pkg="imu_calib" type="apply_calib" name="apply_calib" output="screen" respawn="false">
        <param name="calib_file" value="$(find agv)/cfg/imu_calib.yaml" />
        <param name="calibrate_gyros" value="false" />
    </node>

    <!-- Filter and fuse raw imu data -->
    <node pkg="imu_filter_madgwick" type="imu_filter_node" name="imu_filter_madgwick" output="screen" respawn="false" >
        <param name="fixed_frame" value="base_link" />
        <param name="use_mag" value="false" />
        <param name="publish_tf" value="false" />
        <param name="use_magnetic_field_msg" value="false" /> 
        <param name="world_frame" value="enu" />
        <param name="orientation_stddev" value="0.05" />
    </node>

    <!-- Publish Linorobot odometry -->
    <node pkg="linorobot" name="lino_base_node" type="lino_base_node"></node>

    <!-- Publish static transform from base_footprint to base_link -->
    <node pkg="tf2_ros" type="static_transform_publisher" name="base2foot" args="0 0 -0.05 0 0 0 base_link base_footprint"/>
    <node pkg="tf2_ros" type="static_transform_publisher" name="base2imu" args="0 0 0.02 0 0 0  base_link imu_link"/>
    <node pkg="tf2_ros" type="static_transform_publisher" name="base2laser" args="-0.02 0 0.28 0 0 0 base_link laser" />
    
    <!-- Odom-IMU Extended Kalman Filter-->
    <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization"> 
        <remap from="odometry/filtered" to="odom" />
        <rosparam command="load" file="$(find agv)/cfg/robot_localization.yaml" />
    </node>
    
    <!-- Run Linorobot compatible laser drivers -->
    <node name="rplidarNode"          pkg="rplidar_ros"  type="rplidarNode" output="screen" required="true" >
        <param name="serial_port"         type="string" value="/dev/ttyUSB0"/>  
        <param name="serial_baudrate"     type="int"    value="115200"/>
        <param name="frame_id"            type="string" value="laser"/>
        <param name="inverted"            type="bool"   value="false"/>
        <param name="angle_compensate"    type="bool"   value="true"/>
        <param name="scan_mode"           type="string" value="Express"/>
    </node>
    
</launch>
